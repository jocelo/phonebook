{"version":3,"sources":["actions/types.js","actions/contacts.js","components/add-new.js","components/emergency.js","components/individual.js","components/contacts.js","components/home.js","reducers/contacts.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_CONTACTS","NEW_CONTACT","SET_EMERGENCY","FETCH_API","apiRequest","dispatch","fetch","then","data","json","moreData","parseData","finalData","moreDataSimple","map","contact","id","name","phone","email","isFavorite","row","forEach","firstLetter","substr","toUpperCase","hasOwnProperty","push","letter","list","type","payload","NewContact","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showForm","contactName","contactPhone","contactEmail","handleToggleAddForm","bind","assertThisInitialized","handleSubmitForm","handleCancel","getApiData","setState","event","fieldData","target","value","length","submit","emptyState","_this2","react_default","a","createElement","className","placeholder","onChange","handleFieldChange","onClick","renderForm","React","Component","mapActionsToProps","newContact","oneLetter","contactData","connect","EmergencyContact","index_es","icon","IndividualContact","markAsEmergency","size","style","color","emergencyContact","ContactList","updateEmergencyContact","contactId","updateEmergencyContactParent","listOfContacts","contactGroup","idx","key","components_individual","setEmergencyContact","library","add","faUserCircle","faStar","faMobileAlt","faEnvelope","faUserEdit","faFirstAid","Home","getContacts","getApi","components_add_new","components_emergency","components_contacts","contacts","favoriteContact","initialState","appendToState","singleContact","filter","lastElementAdded","combineReducers","arguments","undefined","action","assign","toConsumableArray","newState","deepClone","selectedLetter","storeEnhancers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","allReducers","App","es","components_home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.535ff936.chunk.js","sourcesContent":["export const FETCH_CONTACTS = 'CONTACT:FETCH_CONTACTS';\r\nexport const NEW_CONTACT = 'CONTACT:NEW_CONTACT';\r\nexport const SET_EMERGENCY = 'CONTACT:SET_EMERGENCY_CONTACT';\r\nexport const FETCH_API = 'CONTACT:FETCH_API';","import { FETCH_CONTACTS, NEW_CONTACT, SET_EMERGENCY, FETCH_API } from './types';\r\n\r\nexport function addNewContact(newContact) {\r\n  const oneLetter = newContact.name.substr(0,1).toUpperCase();\r\n  return {\r\n    type: NEW_CONTACT,\r\n    payload: {\r\n      letter: oneLetter,\r\n      contactData:{ \r\n        name: newContact.name, \r\n        phone: newContact.phone, \r\n        email: newContact.email, \r\n        isFavorite: false \r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchContacts() {\r\n  return ({\r\n    type: FETCH_CONTACTS,\r\n    payload: {}\r\n  })\r\n}\r\n\r\nexport function setEmergencyContact(emergencyContact) {\r\n  return ({\r\n    type: SET_EMERGENCY,\r\n    payload: emergencyContact\r\n  })\r\n}\r\n\r\nexport function apiRequest() {\r\n  return dispatch => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(function(data) {\r\n      return(data.json());\r\n    })\r\n    .then(function(moreData){\r\n      const parseData = [],\r\n        finalData = [],\r\n        moreDataSimple = moreData.map(contact=>{\r\n        return {\r\n          id: contact.id,\r\n          name: contact.name,\r\n          phone: contact.phone,\r\n          email: contact.email,\r\n          isFavorite: false\r\n        }\r\n      });\r\n\r\n      moreDataSimple.forEach(contact=>{\r\n        const firstLetter = contact.name.substr(0,1).toUpperCase();\r\n        if (!parseData.hasOwnProperty(firstLetter)) {\r\n          parseData[firstLetter] = [];\r\n        }\r\n        parseData[firstLetter].push(contact);\r\n      });\r\n\r\n      for (let row in parseData) {\r\n        finalData.push({\r\n          letter: row,\r\n          list: parseData[row]\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: FETCH_API,\r\n        payload: finalData\r\n      })\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addNewContact, apiRequest } from '../actions/contacts';\r\n\r\nimport './css/add-new.css';\r\n\r\nclass NewContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showForm: false,\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: ''\r\n    }\r\n\r\n    this.handleToggleAddForm = this.handleToggleAddForm.bind(this);\r\n    this.handleSubmitForm = this.handleSubmitForm.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n    this.getApiData = this.getApiData.bind(this);\r\n  }\r\n\r\n  handleToggleAddForm() {\r\n    this.setState({showForm: true});\r\n  }\r\n\r\n  handleFieldChange(event) {\r\n    const fieldData = {};\r\n    fieldData[event.target.name] = event.target.value;\r\n    this.setState(fieldData);\r\n  }\r\n\r\n  handleSubmitForm() {\r\n    if (this.state.contactName.length === 0 || this.state.contactPhone.length === 0  || this.state.contactPhone.length === 0) {\r\n      return;\r\n    }\r\n    this.props.submit({name: this.state.contactName, phone: this.state.contactPhone, email: this.state.contactEmail});\r\n    this.emptyState();\r\n  }\r\n\r\n  handleCancel() {\r\n    this.emptyState();\r\n  }\r\n\r\n  emptyState() {\r\n    this.setState({\r\n      showForm: false,\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: ''\r\n    });\r\n  }\r\n  \r\n  renderForm() {\r\n    if (this.state.showForm) {\r\n      return (\r\n        <div className=\"add-form\">\r\n          <input type=\"text\" \r\n            name=\"contactName\" \r\n            placeholder=\"Contact Name\"\r\n            onChange={event=>this.handleFieldChange(event)} value={this.state.contactName} />\r\n          <input type=\"text\" \r\n            name=\"contactPhone\" \r\n            placeholder=\"Contact Phone\"\r\n            onChange={event=>this.handleFieldChange(event)} value={this.state.contactPhone} />\r\n          <input type=\"text\" \r\n            name=\"contactEmail\" \r\n            placeholder=\"Contact Email\"\r\n            onChange={event=>this.handleFieldChange(event)} value={this.state.contactEmail} />\r\n          <br />\r\n          <button type=\"button\" onClick={this.handleSubmitForm}>Save Contact</button>\r\n          <button type=\"button\" onClick={this.handleCancel}>Cancel</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getApiData() {\r\n    this.props.getApiData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        { !this.state.showForm && \r\n          <div>\r\n        <button type=\"button\" onClick={this.handleToggleAddForm}>Add Contact</button>\r\n        <button onClick={this.getApiData} className='header-line'>Load data from server</button>\r\n        </div>\r\n        }\r\n        {this.renderForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  submit: addNewContact,\r\n  getApiData: apiRequest\r\n}\r\n\r\nexport default connect(null, mapActionsToProps)(NewContact);","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './css/emergency.css';\r\n\r\nclass EmergencyContact extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FontAwesomeIcon icon=\"first-aid\" className=\"animate-emergency\" /> \r\n          <strong>{this.props.contact.name}</strong> {this.props.contact.phone}\r\n        <FontAwesomeIcon icon=\"first-aid\" className=\"animate-emergency\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EmergencyContact;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setEmergencyContact } from '../actions/contacts';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './css/individual.css';\r\n\r\nclass IndividualContact extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.markAsEmergency = this.markAsEmergency.bind(this);\r\n  }\r\n\r\n  markAsEmergency(data) {\r\n    this.props.markAsEmergency({id:this.props.id, letter:this.props.letter, name:this.props.name, phone: this.props.phone});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-container\">\r\n        <div className=\"contact-container-flex\">\r\n          \r\n          <div className=\"user-avatar\">\r\n            <FontAwesomeIcon icon=\"user-circle\" size=\"4x\" />\r\n            <div className=\"user-actions\">\r\n              <div>\r\n                <FontAwesomeIcon icon=\"user-edit\" className=\"pointer hoverable\" />\r\n              </div>\r\n              <div>\r\n                <FontAwesomeIcon \r\n                  icon=\"star\" \r\n                  className=\"pointer hoverable \" \r\n                  style={{color: this.props.isFavorite ? 'crimson' : 'gray'}}\r\n                  onClick={this.markAsEmergency} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"user-data\">\r\n            <p>\r\n              <strong>{this.props.name}</strong>\r\n            </p>\r\n            <p>\r\n              <FontAwesomeIcon icon=\"mobile-alt\" />{this.props.phone}\r\n            </p>\r\n            <p>\r\n              <FontAwesomeIcon icon=\"envelope\" />{this.props.email || '-'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  markAsEmergency: setEmergencyContact\r\n}\r\n\r\nexport default connect(null, mapActionsToProps)(IndividualContact);","import React from 'react';\r\nimport IndividualContact from './individual';\r\nimport './css/contacts.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContactList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateEmergencyContact = this.updateEmergencyContact.bind(this);\r\n  }\r\n\r\n  updateEmergencyContact(contactId, letter) {\r\n    this.props.updateEmergencyContactParent(contactId, letter);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.listOfContacts.map((contactGroup, idx)=>{\r\n          return (\r\n            <div key={idx}>\r\n              <h4>{contactGroup.letter} <span className=\"contact-total\">({contactGroup.list.length} contacts)</span></h4>\r\n              <hr />\r\n              {contactGroup.list.map(contact=>{\r\n                return (\r\n                  <IndividualContact \r\n                    key={contact.id}\r\n                    id={contact.id}\r\n                    letter={contactGroup.letter}\r\n                    name={contact.name} \r\n                    phone={contact.phone}\r\n                    email={contact.email}\r\n                    isFavorite={contact.isFavorite}\r\n                    setEmergencyContact={this.updateEmergencyContact} ></IndividualContact>\r\n                )\r\n              })}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, null)(ContactList);","import React from 'react';\r\n\r\nimport NewContact from './add-new';\r\nimport EmergencyContact from './emergency';\r\nimport ContactList from './contacts'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchContacts, apiRequest } from '../actions/contacts';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faUserCircle, \r\n  faStar, \r\n  faMobileAlt, \r\n  faEnvelope, \r\n  faUserEdit,\r\n  faFirstAid \r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './css/home.css';\r\n\r\nlibrary.add(faUserCircle, faStar, faMobileAlt, faEnvelope, faUserEdit, faFirstAid);\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getApiData = this.getApiData.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  getApiData() {\r\n    this.props.getApi();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <div className=\"left-main-header\"><span>&nbsp;</span></div>\r\n          <span className=\"main-header\">Phonebook</span>\r\n          <div className=\"right-main-header\"><span>&nbsp;</span></div>\r\n          <div className=\"brand\">powered by react+redux</div>\r\n        </h1>\r\n        <NewContact></NewContact>\r\n        <hr />\r\n        <EmergencyContact contact={this.props.emergencyContact}></EmergencyContact>\r\n        <hr />\r\n        <ContactList listOfContacts={this.props.contacts}></ContactList>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapsStateToProps = state=>({\r\n  contacts: state.contacts.data,\r\n  emergencyContact: state.contacts.favoriteContact\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getContacts: fetchContacts,\r\n  getApi: apiRequest\r\n};\r\n\r\nexport default connect(\r\n  mapsStateToProps,\r\n  mapActionsToProps\r\n)(Home);","import { FETCH_CONTACTS, NEW_CONTACT, SET_EMERGENCY, FETCH_API } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [{\r\n      letter: 'A',\r\n      list: [\r\n        {id: 1, name: 'Alfonso Cuaron', phone: '(847) 123 1234', email: 'cuaron@gmail.com', isFavorite: false},\r\n        {id: 2, name: 'Adolfo Lopez Mateos', phone: '(310) 321 8859', email: 'calleadolfo@all.com', isFavorite: true}\r\n    ]},{\r\n      letter: 'B',\r\n      list: [\r\n        {id: 1, name: 'Benito Juarez', phone: '(449) 345 9898', email:'benito@hotmail.com', isFavorite: false}\r\n    ]},{\r\n      letter: 'C',\r\n      list: [\r\n        {id: 1, name: 'Carlos Slim', phone: '(555) 545 1212', email:'telmex@bimbo.com', isFavorite: false}\r\n    ]},{\r\n      letter: 'F',\r\n      list: [\r\n        {id: 1, name: 'Frida Kahlo', phone: '(555) 553 5351', email:'coyoacan@cdmx.com', isFavorite: false}\r\n    ]},{\r\n      letter: 'R',\r\n      list: [\r\n        {id: 1, name: 'Rodolfo Neri Vela', phone: '(555) 123 1234', email:'nvela@nasa.com', isFavorite: false}\r\n    ]} \r\n  ],\r\n  favoriteContact: {name:'Adolfo Lopez Mateos', phone:'(310) 321 8859'}\r\n}\r\n\r\nfunction deepClone(state) {\r\n  return state.data.map(contacts=>{\r\n    return Object.assign({}, {\r\n      letter: contacts.letter,\r\n      list: contacts.list.map(contact=>{\r\n        return Object.assign({}, contact);\r\n      })\r\n    })\r\n  });\r\n}\r\n\r\nfunction appendToState(contacts, oneLetter, payload) {\r\n  let singleContact = contacts.filter(contact=>{ return contact.letter === oneLetter});\r\n  if (singleContact.length === 1) {\r\n    singleContact = singleContact[0];\r\n  } else {\r\n    const lastElementAdded = contacts.push({letter: oneLetter, list: []})\r\n    singleContact = contacts[lastElementAdded-1];\r\n  }\r\n  singleContact.list.push({\r\n    id: singleContact.list.length+1,\r\n    name: payload.name,\r\n    phone: payload.phone,\r\n    email: payload.email,\r\n    isFavorite: false\r\n  });\r\n  return contacts;\r\n}\r\n\r\nexport default function(state=initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_CONTACTS:\r\n      return Object.assign({}, state);\r\n    case NEW_CONTACT:\r\n      return Object.assign({}, state, {\r\n        data: appendToState([...state.data], action.payload.letter, action.payload.contactData),\r\n      });\r\n    case SET_EMERGENCY:\r\n      const newState = deepClone(state),\r\n        selectedLetter = newState.filter(contacts=>{\r\n        return contacts.letter === action.payload.letter\r\n      });\r\n\r\n      if(selectedLetter.length === 1) {\r\n        newState.forEach(contacts=>{\r\n          contacts.list.forEach(contact=>{\r\n            contact.isFavorite = false;\r\n          })\r\n        });\r\n\r\n        selectedLetter[0].list.forEach(contact=>{\r\n          contact.isFavorite = contact.id === action.payload.id;\r\n        });\r\n      }\r\n\r\n      return Object.assign({}, {\r\n        data: newState,\r\n        favoriteContact: action.payload\r\n      });\r\n    case FETCH_API:\r\n      return Object.assign({}, state, {\r\n        data: action.payload\r\n      });\r\n    default:\r\n      return initialState;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport contactsReducers from './contacts';\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducers\r\n})","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport allReducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst storeEnhancers = compose(\r\n  applyMiddleware(thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nconst store = createStore(\r\n  allReducers,\r\n  {},\r\n  storeEnhancers\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport Home from './components/home';\r\nimport store from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <Home></Home>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}